openapi: 3.0.1
info:
  contact:
    email: aebruno2@buffalo.edu
  description: Bare Metal Provisioning system for HPC Linux clusters. Find out more
    about Grendel at [https://github.com/ubccr/grendel](https://github.com/ubccr/grendel)
  license:
    name: GPLv3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  title: Grendel API
  version: 1.0.0
externalDocs:
  description: https://grendel.readthedocs.io/en/latest/
  url: https://grendel.readthedocs.io/en/latest/
servers:
- url: http://localhost/v1
tags:
- description: Host API Service
  externalDocs:
    description: Operations for grendel hosts
    url: https://grendel.readthedocs.io/en/latest/
  name: host
- description: Boot Image API Service
  externalDocs:
    description: Operations for grendel boot images
    url: https://grendel.readthedocs.io/en/latest/
  name: image
paths:
  /host/list:
    get:
      description: Returns all host stored in Grendel
      operationId: hostList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Host'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts from database
      summary: List all hosts
      tags:
      - host
  /host/find/{nodeSet}:
    delete:
      description: Delete hosts in the given nodeset
      operationId: hostDelete
      parameters:
      - description: 'nodeset syntax. Example: cpn-d13-[01-100]'
        explode: false
        in: path
        name: nodeSet
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid nodeset supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to delete hosts from database
      summary: Delete hosts by name or nodeset
      tags:
      - host
    get:
      description: Returns a list of hosts in the given nodeset
      operationId: hostFind
      parameters:
      - description: 'nodeset syntax. Example: cpn-d13-[01-100]'
        explode: false
        in: path
        name: nodeSet
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Host'
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid nodeset supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts from database
      summary: Find hosts by name or nodeset
      tags:
      - host
  /host/tags/{tags}:
    get:
      description: Returns a list of hosts with the given tags
      operationId: hostTags
      parameters:
      - description: 'comman separated list of tags. Example: ib,noib,k16'
        explode: false
        in: path
        name: tags
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Host'
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid tags supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts by tag from database
      summary: Find hosts by tags
      tags:
      - host
  /host/provision/{nodeSet}:
    put:
      description: Sets hosts to provision in the given nodeset
      operationId: hostProvision
      parameters:
      - description: 'nodeset syntax. Example: cpn-d13-[01-100]'
        explode: false
        in: path
        name: nodeSet
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid nodeset supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts from database
      summary: Set hosts to provision by name or nodeset
      tags:
      - host
  /host/unprovision/{nodeSet}:
    put:
      description: Sets hosts to unprovision in the given nodeset
      operationId: hostUnprovision
      parameters:
      - description: 'nodeset syntax. Example: cpn-d13-[01-100]'
        explode: false
        in: path
        name: nodeSet
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid nodeset supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts from database
      summary: Set hosts to unprovision by name or nodeset
      tags:
      - host
  /host/tag/{nodeSet}:
    put:
      description: Tag hosts in the given nodeset
      operationId: hostTag
      parameters:
      - description: 'nodeset syntax. Example: cpn-d13-[01-100]'
        explode: false
        in: path
        name: nodeSet
        required: true
        schema:
          type: string
        style: simple
      - description: 'list of tags. Example: ib,noib,k16'
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid nodeset supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts from database
      summary: Tag hosts by name or nodeset
      tags:
      - host
  /host/untag/{nodeSet}:
    put:
      description: Untag hosts the given nodeset
      operationId: hostUntag
      parameters:
      - description: 'nodeset syntax. Example: cpn-d13-[01-100]'
        explode: false
        in: path
        name: nodeSet
        required: true
        schema:
          type: string
        style: simple
      - description: 'list of tags. Example: ib,noib,k16'
        explode: true
        in: query
        name: tags
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid nodeset supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch hosts from database
      summary: Untag hosts name or nodeset
      tags:
      - host
  /host:
    post:
      operationId: storeHosts
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Host'
              type: array
        description: Add/Update one or more hosts to Grendel
        required: true
      responses:
        "201":
          content: {}
          description: successfully stored hosts
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid host input supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to store hosts in database
      summary: Add or update hosts in Grendel
      tags:
      - host
      x-codegen-request-body-name: body
  /bootimage/list:
    get:
      description: Returns all images stored in Grendel
      operationId: imageList
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BootImage'
                type: array
          description: successful operation
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch images from database
      summary: List all images
      tags:
      - image
  /bootimage/find/{name}:
    delete:
      description: Delete boot images with the given name
      operationId: imageDelete
      parameters:
      - description: Name of boot image to delete
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid name supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to delete boot images from database
      summary: Delete boot images by name
      tags:
      - image
    get:
      description: Returns image with the given name
      operationId: imageFind
      parameters:
      - description: Name of image
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BootImage'
                type: array
          description: successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid name supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to fetch image from database
      summary: Find image by name
      tags:
      - image
  /bootimage:
    post:
      operationId: storeImages
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BootImage'
              type: array
        description: Add/Update one or more images to Grendel
        required: true
      responses:
        "201":
          content: {}
          description: successfully stored images
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Invalid boot image input supplied
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Failed to store images in database
      summary: Add or update images in Grendel
      tags:
      - image
      x-codegen-request-body-name: body
components:
  schemas:
    Host:
      example:
        interfaces:
        - fqdn: fqdn
          ip: ip
          name: name
          bmc: true
          mac: mac
        - fqdn: fqdn
          ip: ip
          name: name
          bmc: true
          mac: mac
        provision: true
        name: name
        id: id
        boot_image: boot_image
        firmware: firmware
      properties:
        id:
          type: string
        name:
          type: string
        provision:
          type: boolean
        firmware:
          type: string
        boot_image:
          type: string
        interfaces:
          items:
            $ref: '#/components/schemas/NetInterface'
          type: array
      required:
      - name
      type: object
    NetInterface:
      example:
        fqdn: fqdn
        ip: ip
        name: name
        bmc: true
        mac: mac
      properties:
        mac:
          type: string
        name:
          type: string
        ip:
          type: string
        fqdn:
          type: string
        bmc:
          type: boolean
      type: object
    BootImage:
      example:
        cmdline: cmdline
        kernel: kernel
        name: name
        verify: true
        id: id
        liveimg: liveimg
        initrd:
        - initrd
        - initrd
      properties:
        id:
          type: string
        name:
          type: string
        kernel:
          type: string
        initrd:
          items:
            type: string
          type: array
        liveimg:
          type: string
        cmdline:
          type: string
        verify:
          type: boolean
      required:
      - name
      type: object
    ErrorResponse:
      properties:
        message:
          type: string
      type: object
  securitySchemes:
    api_key:
      in: header
      name: api_key
      type: apiKey
