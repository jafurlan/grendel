{{ $tdClasses := "border border-neutral-400 px-2 py-1" }}


<form>
    <div class="mb-3">
        <button
            class="rounded-lg border border-neutral-400 p-1"
            type="button"
            hx-post="/api/bmc/reboot"
            hx-vals="js:{hosts: HostMap()}"
            hx-confirm="Are you sure you want to reboot these nodes?">
            Reboot
        </button>
        <button
            class="rounded-lg border border-neutral-400 p-1"
            type="button"
            hx-post="/api/bmc/configure"
            hx-vals="js:{hosts: HostMap()}">
            Auto Configure
        </button>
        <button
            class="rounded-lg border border-neutral-400 p-1"
            type="button"
            hx-get="/fragment/hostAddModal"
            hx-target="#hostModal"
            hx-vals='js:{hosts: HostMap("u"), rack: "{{ .Rack }}"}'
            onclick="document.getElementById('hostModal').showModal()">
            Add Hosts
        </button>
        <button
            class="rounded-lg border border-neutral-400 p-1"
            type="button"
            hx-delete="/api/host"
            hx-vals='js:{hosts: HostMap("hostname")}'
            hx-confirm="Are you sure you want to delete the selected hosts?">
            Delete Hosts
        </button>
        <button class="rounded-lg border border-neutral-400 p-1" type="button" onclick="SelectAllNodes()">
            Select Nodes
        </button>
        <button class="rounded-lg border border-neutral-400 p-1" type="button" onclick="Clear()">Clear</button>
    </div>
    <div id="replace-me"></div>
    <table class="w-full table-fixed">
        <thead>
            <tr>
                <th class="{{ $tdClasses }} w-14">u</th>
                <th class="{{ $tdClasses }}">{{ .Rack }}</th>
                <th class="{{ $tdClasses }} w-14"></th>
            </tr>
        </thead>
        <tbody>
            {{ range $u := .u }}
                {{ $hostName := "" }}
                {{ $hostType := "" }}
                {{ range $host := $.Hosts }}
                    {{ $s := Split $host.Name "-" }}
                    {{ $hostU := index $s 2 }}
                    {{ if eq $hostU $u }}
                        {{ $hostName = $host.Name }}
                        {{ $hostType = $host.HostType }}
                    {{ end }}
                {{ end }}
                <tr>
                    <td class="{{ $tdClasses }}">{{ $u }}</td>
                    <td
                        class="{{ $tdClasses }} {{ if eq $hostType "switch" }}
                            text-red-700
                        {{ end }} hover:bg-neutral-50">
                        <a class="hover:font-medium" href="/host/{{ $hostName }}" hx-boost="false">
                            {{ $hostName }}
                        </a>
                    </td>
                    <td class="{{ $tdClasses }}">
                        <input type="checkbox" name="{{ $u }}:{{ $hostName }}:{{ $hostType }}" />
                    </td>
                </tr>
            {{ end }}
        </tbody>
    </table>
</form>

<dialog id="hostModal" class="rounded-lg shadow-md transition-all duration-300 ease-in"></dialog>

<script>
    function SelectAllNodes() {
        var c = document.querySelectorAll('input[type="checkbox"]').forEach((val) => {
            var n = val.name.split(":");
            if (n[2] === "server") val.checked = true;
        });
    }

    function Clear() {
        var c = document.querySelectorAll('input[type="checkbox"]').forEach((val) => {
            val.checked = false;
        });
    }

    function HostMap(type = "hostname") {
        var h = [];
        var c = document.querySelectorAll('input[type="checkbox"]').forEach((val) => {
            if (val.checked === true) {
                var n = val.name.split(":");
                if (type === "hostname") h.push(n[1]);
                else if (type === "u") h.push(n[0]);
            }
        });
        return h.join(",");
    }

    var lastChecked = null;
    checkboxes = Array.from(document.querySelectorAll('input[type="checkbox"]'));
    checkboxes.forEach((val) => {
        val.addEventListener("click", function (e) {
            if (lastChecked !== null && e.shiftKey) {
                var start = checkboxes.indexOf(lastChecked);
                var end = checkboxes.indexOf(this);

                // reverse in case of selecting from bottom to top
                var first = start < end ? start : end;
                var last = start < end ? end : start;

                for (let i = first; i <= last; i++) {
                    checkboxes[i].checked = this.checked;
                }
            }
            lastChecked = this;
        });
    });
</script>
