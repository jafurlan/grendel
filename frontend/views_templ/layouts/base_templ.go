// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/ubccr/grendel/frontend/views_templ/components"
import "github.com/ubccr/grendel/frontend/views_templ"
import "github.com/ubccr/grendel/model"

func Base(hosts model.HostList, pages templ.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script src=\"/static/htmx.min.js\"></script><script src=\"/static/loading-states.js\"></script><script src=\"/static/notyf.min.js\"></script><link rel=\"stylesheet\" href=\"/static/notyf.min.css\"><link rel=\"stylesheet\" href=\"/static/tailwind.css\"><title>Grendel</title></head><body class=\"flex min-h-screen flex-col bg-large-triangles-ub\"><div><nav class=\"bg-white p-4 xl:px-12\"><div class=\"flex justify-between\"><button class=\"border-netural-300 block transform rounded-lg border p-1 px-2 transition-transform hover:text-neutral-700 active:scale-90 sm:hidden\" onclick=\"useTransition(() =&gt; showMobile())\"><span id=\"icon-bars\" class=\"\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Icon("bars-3").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span> <span id=\"icon-x\" class=\"\" hidden>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Icon("x-mark").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span></button><div class=\"flex whitespace-nowrap\"><img src=\"/favicon.ico\" alt=\"UBCCR\" width=\"{36}\" height=\"{36}\"><div class=\"ml-2 mt-2 space-y-1 sm:my-auto sm:ml-4 sm:block *:rounded-md *:px-3 *:py-2 *:text-sm *:font-medium *:text-neutral-600\" hidden>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 = []any{"hover:bg-neutral-200", templ.KV("bg-neutral-100", views.CtxString("path", ctx) == "/templ")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var2).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"/templ\" hx-boost=\"true\">Home</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 = []any{"hover:bg-neutral-200", templ.KV("bg-neutral-100", views.CtxString("path", ctx) == "/templ/floorplan")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var3...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var3).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"/templ/floorplan\" hx-boost=\"true\">Floorplan</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if views.CtxString("role", ctx) == "admin" {
			var templ_7745c5c3_Var4 = []any{"hover:bg-neutral-200", templ.KV("bg-neutral-100", views.CtxString("path", ctx) == "/templ/users")}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var4...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var4).String()))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"/templ/users\" hx-boost=\"true\">Users</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><div class=\"my-auto flex gap-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if views.CtxBool("authenticated", ctx) == false {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a href=\"/login\" id=\"login\" hx-boost=\"true\">Login</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"mx-1 hidden sm:flex\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = components.Search(hosts).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><button class=\"rounded-md px-3 py-2 text-sm font-medium text-neutral-600 hover:bg-neutral-200\" hx-post=\"/api/auth/logout\" hx-swap=\"none\" id=\"logout\">Logout</button>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><div id=\"mobile-menu\" class=\"ml-2 mt-2 space-y-1 sm:hidden *:rounded-md *:px-3 *:py-2 *:text-sm *:font-medium *:text-neutral-600\" hidden>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Search(hosts).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 = []any{"hover:bg-neutral-200 block", templ.KV("bg-neutral-100", views.CtxString("path", ctx) == "/")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var5...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var5).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"/\" hx-boost=\"true\">Home</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 = []any{"hover:bg-neutral-200 block", templ.KV("bg-neutral-100", views.CtxString("path", ctx) == "/floorplan")}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var6...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var6).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"/floorplan\" hx-boost=\"true\">Floorplan</a> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if views.CtxString("role", ctx) == "admin" {
			var templ_7745c5c3_Var7 = []any{"hover:bg-neutral-200 block", templ.KV("bg-neutral-100", views.CtxString("path", ctx) == "/users")}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var7...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<a class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var7).String()))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" href=\"/users\" hx-boost=\"true\">Users</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></nav><div class=\"flex justify-center px-2 py-4 text-center\"><div class=\"w-full rounded-lg bg-white p-3 shadow-xl md:w-5/6\" id=\"body\"><noscript>Woah buddy, you think this will just work without Javascript?</noscript>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = pages.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div><div class=\"flex-grow\"></div><div class=\"sticky bottom-0\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 = []any{"absolute bottom-0 right-0 -translate-x-2/3 -translate-y-2/3", templ.KV("hidden", views.CtxBool("authenticated", ctx) == false)}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var8...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var8).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><button class=\"group relative z-10 rounded-md bg-blue-500 p-2 text-white shadow-lg hover:bg-blue-400\" onclick=\"showEventsModal()\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Icon("bell").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"absolute right-0 top-0 -translate-y-1/3 translate-x-1/3 rounded-full bg-red-500 px-1 py-0 text-xs text-white group-hover:bg-red-400\" id=\"eventsCount\">0</div></button></div></div><dialog id=\"eventsModal\" class=\"h-5/6 w-full rounded-lg shadow-md md:w-2/3 lg:w-3/4\"><div class=\"flex h-full flex-col\"><div><div class=\"m-2 flex justify-center align-middle \"><h1 class=\"rounded-xl border border-neutral-300 px-3 py-1 text-3xl shadow-lg\">Notifications</h1></div><div class=\"p-3\" hx-swap=\"innerHTML\" hx-get=\"/fragments/events\" hx-trigger=\"load, every 2s\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if views.CtxString("role", ctx) == "disabled" || views.CtxBool("authenticated", ctx) == false {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-disable")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" hx-select-oob=\"#eventsCount:innerHTML\"></div></div><div class=\"flex-grow\"></div><div class=\"sticky bottom-0 flex w-full justify-end gap-3 border-t border-neutral-200 bg-neutral-50 p-3\"><button type=\"button\" onclick=\"closeEventsModal()\" class=\"transform rounded-md border bg-neutral-500 px-2 py-1 text-white transition-transform hover:bg-neutral-400 active:scale-90\">Close</button></div></div></dialog></body><script>\n        document.body.addEventListener(\"toast-error\", function (e) {\n            let notyf = new Notyf({\n                duration: 5000,\n                dismissible: false,\n                ripple: false,\n                position: { x: \"left\", y: \"bottom\" },\n            });\n            notyf.error(e.detail.value);\n            console.error(e.detail.value);\n        });\n        document.body.addEventListener(\"toast-success\", function (e) {\n            let notyf = new Notyf({\n                duration: 3000,\n                dismissible: false,\n                ripple: false,\n                position: { x: \"left\", y: \"bottom\" },\n            });\n            notyf.success(e.detail.value);\n            console.log(e.detail.value);\n        });\n\n        function showMobile() {\n            const m = document.getElementById(\"mobile-menu\").hidden;\n            document.getElementById(\"mobile-menu\").hidden = !m;\n            document.getElementById(\"icon-bars\").hidden = m;\n            document.getElementById(\"icon-x\").hidden = !m;\n        }\n        function showEventsModal() {\n            useTransition(() => document.getElementById(\"eventsModal\").showModal());\n        }\n        function closeEventsModal() {\n            useTransition(() => document.getElementById(\"eventsModal\").close());\n        }\n        function useTransition(func) {\n            if (!document.startViewTransition) {\n                return func();\n            } else {\n                document.startViewTransition(() => func());\n            }\n        }\n    </script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
